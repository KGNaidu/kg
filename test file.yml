---
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - 'vars/prod-dc3.yml'
  vars:
    - skiplist: "{{ _hosts_to_be_skipped.split('\n') }}"
  
  roles:
    - role: role-svc-accts

  tasks:
  - name: list virtual machines
    vmware_vm_facts:
      hostname: '{{ vc_host }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: False
    delegate_to: localhost
    register: vmfacts

  - name: Print list of Virtual machines in Vcenter
    debug:
      msg: "{{ vmfacts.virtual_machines|json_query('[].guest_name') }}"
    register: hostlist

  - name: Gather snapshot information about the virtual machine in the given vCenter
    vmware_guest_snapshot_facts:
      hostname: '{{ vc_host }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      datacenter: '{{ vc_datacenter }}'
      name: "{{ item }}"
      folder: '{{ vc_datacenter }}/vm/'
    delegate_to: localhost
    register: snapshot_info
    with_items: '{{ hostlist.msg }}'

  - name: Print list of VM_Snapshot infomation
    debug:
     msg: "{{ snapshot_info.results | json_query('[*].{hostname: item, snapshot_list: guest_snapshots.snapshots[].name}') }}"
    register: vmsnapshot
  
  - name: Filter VMs with snapshot 
    debug:
      msg: "{{ vmsnapshot.msg | json_query('[?snapshot_list!=`null`].hostname') }}"
    register: vmwith_snapshot

  - name: If no VMs for exclusion
    set_fact:
      my_list: "{{ vmwith_snapshot.msg }}"
    when: _hosts_to_be_skipped | length == 0
    
  - name: If VMs given for exclusion
    set_fact:
      my_list: "{{ vmwith_snapshot.msg | difference(skiplist) }}"
    when: _hosts_to_be_skipped | length > 0    

  - name: Print final list of VMs for snapshot deletion after exclude list
    debug:
      var: my_list

  - name: Delete all VM snapshots for the identified VMs
    vmware_guest_snapshot:
      hostname: '{{ vc_host }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      datacenter: '{{ vc_datacenter }}'
      name: "{{ item }}"
      folder: '{{ vc_datacenter }}/vm/'
      state: remove_all
    with_items: '{{ my_list }}'
    